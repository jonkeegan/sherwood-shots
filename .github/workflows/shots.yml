name: Take screenshots

on:
  push:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.is_template }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - uses: actions/cache@v4
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright/
        key: ${{ runner.os }}-browsers
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Install Playwright dependencies
      run: |
        shot-scraper install
    - uses: actions/github-script@v7
      name: Create shots.yml if missing on first run
      with:
        script: |
          const fs = require('fs');
          const url = process.env.SCREENSHOT_URL || (context.payload.repository.description || "").trim();
          if (!fs.existsSync('shots.yml') && url.startsWith('http')) {
              const domain = new URL(url).hostname;
              const timestamp = new Date().toISOString().replace(/[-:T]/g, '_').split('.')[0]; // Format YYYY_MM_DD_HH_MM_SS
              const filename = `${domain}_${timestamp}.png`;
              const yamlContent = `- url: ${url}\n  output: ${filename}\n  height: 800`;
              fs.writeFileSync('shots.yml', yamlContent + '\n');
          }
    - name: Take shots
      run: |
        shot-scraper multi shots.yml
    - name: Commit and push
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
        git commit -m "Screenshot taken at ${timestamp}" || exit 0
        git pull --rebase
        git push
