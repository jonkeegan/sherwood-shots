name: Take screenshots

on:
  push:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.is_template }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - uses: actions/cache@v4
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright/
        key: ${{ runner.os }}-browsers
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Install Playwright dependencies
      run: |
        shot-scraper install
    - name: Update shots.yml with dynamic filename
      run: |
       if [ -f shots.yml ]; then
          # Extract URL from shots.yml
          URL=$(grep -Eo 'url: *[^ ]+' shots.yml | sed 's/url: //g' | tr -d '[:space:]')
        
          # Validate if URL is properly extracted
          if [[ -z "$URL" ]]; then
            echo "Error: Could not extract a valid URL from shots.yml"
            exit 1
          fi
        
          # Extract domain name from URL
          DOMAIN=$(echo "$URL" | awk -F/ '{print $3}')
        
          # Validate if DOMAIN is extracted correctly
          if [[ -z "$DOMAIN" ]]; then
            echo "Error: Could not extract a valid domain from URL ($URL)"
            exit 1
          fi
        
          # Generate timestamp in YYYY-MM-DD_HH-MM-SS format
          TIMESTAMP=$(date -u +"%Y-%m-%d_%H-%M-%S")
        
          # Construct the filename
          FILENAME="${DOMAIN}_${TIMESTAMP}.png"
        
          # Update shots.yml with the new filename
          sed -i "s|output: .*|output: ${FILENAME}|" shots.yml
          echo "Updated shots.yml -> output: ${FILENAME}"
        
        else
          echo "Error: shots.yml not found!"
          exit 1
        fi
    - name: Take shots
      run: |
        shot-scraper multi shots.yml
    - name: Commit and push
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
        git commit -m "Screenshot taken at ${timestamp}" || exit 0
        git pull --rebase
        git push
